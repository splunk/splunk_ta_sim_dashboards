<?xml version="1.0"?>
    <view template="splunk_sim_dashboards:/templates/dashboard.html" type="html">
        <label>Docker Containers</label>
        <definition>{&quot;visualizations&quot;:{&quot;viz_docker_containers&quot;:{&quot;type&quot;:&quot;viz.table&quot;,&quot;options&quot;:{&quot;count&quot;:5,&quot;numberPrecision&quot;:2,&quot;fields&quot;:{&quot;CPUUtilization&quot;:{&quot;unit&quot;:&quot;%&quot;,&quot;unitPosition&quot;:&quot;after&quot;}}},&quot;dataSources&quot;:{&quot;primary&quot;:&quot;ds_docker_containers&quot;},&quot;title&quot;:&quot;Containers&quot;,&quot;description&quot;:&quot;&quot;},&quot;viz_container_single_value&quot;:{&quot;type&quot;:&quot;viz.singlevalue&quot;,&quot;options&quot;:{},&quot;encoding&quot;:{&quot;trend&quot;:&quot;primary[1]&quot;,&quot;majorColor&quot;:{&quot;field&quot;:&quot;primary[1]&quot;,&quot;format&quot;:{&quot;type&quot;:&quot;rangevalue&quot;,&quot;ranges&quot;:[{&quot;from&quot;:100,&quot;value&quot;:&quot;#cb3b43&quot;},{&quot;from&quot;:70,&quot;to&quot;:100,&quot;value&quot;:&quot;#ff7152&quot;},{&quot;from&quot;:50,&quot;to&quot;:70,&quot;value&quot;:&quot;#fc9850&quot;},{&quot;from&quot;:30,&quot;to&quot;:50,&quot;value&quot;:&quot;#f4df7a&quot;},{&quot;from&quot;:10,&quot;value&quot;:&quot;#53a051&quot;,&quot;to&quot;:30},{&quot;to&quot;:10,&quot;value&quot;:&quot;#5fbcff&quot;}]}}},&quot;dataSources&quot;:{&quot;primary&quot;:&quot;ds_container_single_value&quot;},&quot;title&quot;:&quot;Number of Containers&quot;},&quot;viz_container_trend&quot;:{&quot;type&quot;:&quot;viz.area&quot;,&quot;options&quot;:{&quot;legend.placement&quot;:&quot;none&quot;,&quot;axisTitleX.visibility&quot;:&quot;collapsed&quot;},&quot;dataSources&quot;:{&quot;primary&quot;:&quot;ds_container_trend&quot;},&quot;title&quot;:&quot;Number of Containers - Trend&quot;},&quot;viz_containers_by_host&quot;:{&quot;type&quot;:&quot;viz.table&quot;,&quot;options&quot;:{},&quot;dataSources&quot;:{&quot;primary&quot;:&quot;ds_containers_by_host&quot;},&quot;title&quot;:&quot;Containers by Host&quot;},&quot;viz_top_containers_cpu&quot;:{&quot;type&quot;:&quot;viz.table&quot;,&quot;options&quot;:{&quot;numberPrecision&quot;:2,&quot;fields&quot;:{&quot;CPUUtilization&quot;:{&quot;unit&quot;:&quot;%&quot;,&quot;unitPosition&quot;:&quot;after&quot;}}},&quot;title&quot;:&quot;Top Containers by CPU %&quot;,&quot;dataSources&quot;:{&quot;primary&quot;:&quot;ds_top_containers_cpu&quot;}},&quot;viz_total_disk_bytes&quot;:{&quot;type&quot;:&quot;viz.area&quot;,&quot;options&quot;:{},&quot;encoding&quot;:{&quot;x&quot;:&quot;primary._time&quot;,&quot;y&quot;:&quot;primary.bytes_read&quot;,&quot;y2&quot;:&quot;primary.bytes_written&quot;},&quot;dataSources&quot;:{&quot;primary&quot;:&quot;ds_total_disk_bytes&quot;},&quot;title&quot;:&quot;Total Disk Bytes/sec&quot;},&quot;viz_memory_perc_used&quot;:{&quot;type&quot;:&quot;viz.area&quot;,&quot;options&quot;:{&quot;axisTitleX.visibility&quot;:&quot;collapsed&quot;,&quot;legend.placement&quot;:&quot;none&quot;},&quot;dataSources&quot;:{&quot;primary&quot;:&quot;ds_memory_perc_used&quot;},&quot;title&quot;:&quot;Memory % Used&quot;},&quot;viz_total_network_bits&quot;:{&quot;type&quot;:&quot;viz.column&quot;,&quot;options&quot;:{&quot;axisTitleX.visibility&quot;:&quot;collapsed&quot;,&quot;legend.placement&quot;:&quot;bottom&quot;},&quot;encoding&quot;:{&quot;x&quot;:&quot;primary._time&quot;,&quot;y&quot;:&quot;primary.bytes_written&quot;,&quot;y2&quot;:&quot;primary.bytes_read&quot;},&quot;dataSources&quot;:{&quot;primary&quot;:&quot;ds_total_network_bits&quot;},&quot;title&quot;:&quot;Total Network Bits/sec&quot;},&quot;viz_cpu_perc_trend&quot;:{&quot;type&quot;:&quot;viz.area&quot;,&quot;options&quot;:{&quot;axisTitleX.visibility&quot;:&quot;collapsed&quot;,&quot;legend.placement&quot;:&quot;none&quot;},&quot;dataSources&quot;:{&quot;primary&quot;:&quot;ds_cpu_perc_trend&quot;},&quot;title&quot;:&quot;CPU % Trend&quot;},&quot;viz_Nay1HSVr&quot;:{&quot;type&quot;:&quot;viz.rectangle&quot;,&quot;options&quot;:{&quot;strokeWidth&quot;:0}},&quot;viz_disk_24h_change&quot;:{&quot;type&quot;:&quot;viz.area&quot;,&quot;options&quot;:{&quot;axisTitleX.visibility&quot;:&quot;collapsed&quot;,&quot;axisY2.enabled&quot;:true,&quot;chart.overlayFields&quot;:&quot;Change(%)&quot;,&quot;lineWidth&quot;:5,&quot;legend.placement&quot;:&quot;bottom&quot;},&quot;encoding&quot;:{&quot;x&quot;:&quot;primary._time&quot;,&quot;y&quot;:&quot;primary.Today&quot;,&quot;y2&quot;:&quot;primary.Change(%)&quot;},&quot;dataSources&quot;:{&quot;primary&quot;:&quot;ds_disk_24h_change&quot;},&quot;title&quot;:&quot;Disk Metrics 24h Change %&quot;},&quot;viz_network_24h_change&quot;:{&quot;type&quot;:&quot;viz.area&quot;,&quot;options&quot;:{&quot;axisTitleX.visibility&quot;:&quot;collapsed&quot;,&quot;axisY2.enabled&quot;:true,&quot;chart.overlayFields&quot;:&quot;Change(%)&quot;,&quot;lineWidth&quot;:5,&quot;legend.placement&quot;:&quot;bottom&quot;},&quot;encoding&quot;:{&quot;x&quot;:&quot;primary._time&quot;,&quot;y&quot;:&quot;primary.Today&quot;,&quot;y2&quot;:&quot;primary.Change(%)&quot;},&quot;dataSources&quot;:{&quot;primary&quot;:&quot;ds_network_24h_change&quot;},&quot;title&quot;:&quot;Network Metrics 24h Change %&quot;},&quot;viz_memory_percentile_distribution&quot;:{&quot;type&quot;:&quot;viz.column&quot;,&quot;options&quot;:{&quot;legend.labelStyle.overflowMode&quot;:&quot;ellipsisNone&quot;,&quot;legend.placement&quot;:&quot;bottom&quot;,&quot;axisTitleY.text&quot;:&quot;% Used&quot;},&quot;encoding&quot;:{&quot;x&quot;:&quot;primary[0]&quot;,&quot;y&quot;:[&quot;primary[1]&quot;,&quot;primary[2]&quot;,&quot;primary[3]&quot;,&quot;primary[4]&quot;,&quot;primary[5]&quot;,&quot;primary[6]&quot;]},&quot;dataSources&quot;:{&quot;primary&quot;:&quot;ds_memory_percentile_distribution&quot;},&quot;title&quot;:&quot;Memory Metrics Percentile Distribution&quot;},&quot;viz_cpu_percentile_distribution&quot;:{&quot;type&quot;:&quot;viz.column&quot;,&quot;options&quot;:{&quot;legend.labelStyle.overflowMode&quot;:&quot;ellipsisNone&quot;,&quot;legend.placement&quot;:&quot;bottom&quot;},&quot;dataSources&quot;:{&quot;primary&quot;:&quot;ds_cpu_percentile_distribution&quot;},&quot;title&quot;:&quot;CPU Percentile Distribution&quot;}},&quot;dataSources&quot;:{&quot;ds_input_containers&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;query&quot;:&quot;| mstats avg(_value) as value WHERE `sim_metrics_indexes` AND (metric_name=\&quot;*\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (extracted_host IN($docker_host_tok$)) by container_name| fields container_name&quot;,&quot;queryParameters&quot;:{&quot;earliest&quot;:&quot;$tr.earliest$&quot;,&quot;latest&quot;:&quot;$tr.latest$&quot;}},&quot;name&quot;:&quot;Containers&quot;},&quot;ds_input_hosts&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;query&quot;:&quot;| mstats avg(_value) as value WHERE `sim_metrics_indexes` AND (metric_name=\&quot;*\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) by extracted_host | fields extracted_host&quot;,&quot;queryParameters&quot;:{&quot;earliest&quot;:&quot;$tr.earliest$&quot;,&quot;latest&quot;:&quot;$tr.latest$&quot;}},&quot;name&quot;:&quot;Hosts&quot;},&quot;ds_docker_containers&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;query&quot;:&quot;| mstats avg(_value) as value WHERE `sim_metrics_indexes` AND (metric_name=\&quot;cpu.usage.system\&quot; OR metric_name=\&quot;cpu.usage.total\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$)) by container_name, metric_name, extracted_host span=$span_tok$\n| eval container_name_host = container_name.\&quot; DSFXHOST \&quot;.extracted_host\n| chart latest(value) over container_name_host by metric_name\n| rex field=container_name_host \&quot;(?&lt;container_name&gt;.*)\\sDSFXHOST\\s(?&lt;extracted_host&gt;.*)\&quot;\n| rename cpu.usage.total as total cpu.usage.system as system, container_name as \&quot;Container\&quot;, extracted_host as \&quot;Host\&quot;\n| eval CPUUtilization = (100*total/system)\n| table \&quot;Container\&quot;, \&quot;Host\&quot;, \&quot;CPUUtilization\&quot;&quot;,&quot;queryParameters&quot;:{&quot;earliest&quot;:&quot;$tr.earliest$&quot;,&quot;latest&quot;:&quot;$tr.latest$&quot;}},&quot;name&quot;:&quot;Container Overview&quot;},&quot;ds_container_single_value&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;query&quot;:&quot;| mstats avg(_value) as value WHERE `sim_metrics_indexes` AND (metric_name=\&quot;*\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$)) by container_name span=$span_tok$\n| timechart dc(container_name) span=$span_tok$&quot;,&quot;queryParameters&quot;:{&quot;earliest&quot;:&quot;$tr.earliest$&quot;,&quot;latest&quot;:&quot;$tr.latest$&quot;}},&quot;name&quot;:&quot;container_count&quot;},&quot;ds_container_trend&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;query&quot;:&quot;| mstats avg(_value) as value WHERE `sim_metrics_indexes` AND (metric_name=\&quot;*\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$)) by container_name span=$span_tok$\n| timechart dc(container_name) as Count span=$span_tok$&quot;,&quot;queryParameters&quot;:{&quot;earliest&quot;:&quot;$tr.earliest$&quot;,&quot;latest&quot;:&quot;$tr.latest$&quot;},&quot;module&quot;:&quot;container_count&quot;},&quot;name&quot;:&quot;container_count&quot;},&quot;ds_containers_by_host&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;query&quot;:&quot;| mstats avg(_value) as value WHERE `sim_metrics_indexes` AND (metric_name=\&quot;cpu.usage.total\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$)) by container_name, extracted_host span=$span_tok$\n| chart sparkline(dc(container_name)) as \&quot;Sparkline\&quot;, dc(container_name) as Count by extracted_host\n|  rename extracted_host as Host\n|  table Host, \&quot;Sparkline\&quot;, Count&quot;,&quot;queryParameters&quot;:{&quot;earliest&quot;:&quot;$tr.earliest$&quot;,&quot;latest&quot;:&quot;$tr.latest$&quot;}},&quot;name&quot;:&quot;containers_by_host&quot;},&quot;ds_top_containers_cpu&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;query&quot;:&quot;| mstats avg(_value) as value WHERE `sim_metrics_indexes` AND (metric_name=\&quot;cpu.usage.system\&quot; OR metric_name=\&quot;cpu.usage.total\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$)) by container_name, metric_name span=$span_tok$\n| chart latest(value) over container_name by metric_name\n| rename cpu.usage.total as total cpu.usage.system as system, container_name as \&quot;Container\&quot;\n| eval CPUUtilization = (100*total/system)\n| table \&quot;Container\&quot;, CPUUtilization\n| sort -CPUUtilization&quot;,&quot;queryParameters&quot;:{&quot;earliest&quot;:&quot;$tr.earliest$&quot;,&quot;latest&quot;:&quot;$tr.latest$&quot;}},&quot;name&quot;:&quot;Top Containers by CPU %&quot;},&quot;ds_total_disk_bytes&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;query&quot;:&quot;| mstats sum(_value) as value WHERE `sim_metrics_indexes` AND (metric_name=\&quot;blkio.io_service_bytes_recursive.*\&quot;) AND  sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$)) by metric_name span=$span_tok$\n| timechart avg(value) span=$span_tok$ by metric_name\n| rename blkio.io_service_bytes_recursive.write as bytes_written, blkio.io_service_bytes_recursive.read as bytes_read\n| eval bytes_written=round(bytes_written,2), bytes_read=round(bytes_read,2)&quot;,&quot;queryParameters&quot;:{&quot;earliest&quot;:&quot;$tr.earliest$&quot;,&quot;latest&quot;:&quot;$tr.latest$&quot;}},&quot;name&quot;:&quot;Total Disk Bytes/sec&quot;},&quot;ds_memory_perc_used&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;query&quot;:&quot;| mstats avg(_value) as avg WHERE `sim_metrics_indexes` AND (metric_name=\&quot;memory.usage.total\&quot; OR metric_name=\&quot;memory.usage.limit\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$)) by metric_name span=$span_tok$\n| chart avg(avg) as avg over _time by metric_name span=$span_tok$\n| eval \&quot;% Used\&quot; = round((100*&#39;memory.usage.total&#39;/&#39;memory.usage.limit&#39;),2)\n| table _time, \&quot;% Used\&quot;&quot;,&quot;queryParameters&quot;:{&quot;earliest&quot;:&quot;$tr.earliest$&quot;,&quot;latest&quot;:&quot;$tr.latest$&quot;}},&quot;name&quot;:&quot;Memory Used %&quot;},&quot;ds_cpu_perc_trend&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;queryParameters&quot;:{&quot;earliest&quot;:&quot;$tr.earliest$&quot;,&quot;latest&quot;:&quot;$tr.latest$&quot;},&quot;query&quot;:&quot;| mstats avg(_value) as value WHERE `sim_metrics_indexes` AND (metric_name=\&quot;cpu.usage.system\&quot; OR metric_name=\&quot;cpu.usage.total\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$)) by metric_name span=$span_tok$\n| timechart avg(value) span=$span_tok$ by metric_name\n| rename cpu.usage.total as total cpu.usage.system as system\n| eval CPUUtilization = round((100*total/system),2)\n| fields _time CPUUtilization&quot;},&quot;name&quot;:&quot;CPU % Trend&quot;},&quot;ds_total_network_bits&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;queryParameters&quot;:{&quot;earliest&quot;:&quot;$tr.earliest$&quot;,&quot;latest&quot;:&quot;$tr.latest$&quot;},&quot;query&quot;:&quot;| mstats sum(_value) as value WHERE `sim_metrics_indexes` AND (metric_name=\&quot;network.usage.tx_bytes\&quot; OR metric_name=\&quot;network.usage.rx_bytes\&quot;) AND  sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$)) by metric_name span=$span_tok$\n| timechart avg(value) span=$span_tok$ by metric_name\n| rename network.usage.tx_bytes as tx_bytes, network.usage.rx_bytes as rx_bytes\n| eval tx_bytes=round(tx_bytes,2), rx_bytes=round(rx_bytes,2)&quot;},&quot;name&quot;:&quot;Total Network Bits/sec&quot;},&quot;ds_pzTyWSNW_ds_RgfeBclw_ds_NLHAGAlL_ds_uSWGsY6D&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;query&quot;:&quot;| mstats avg(_value) as avg WHERE `sim_metrics_indexes` AND (metric_name=\&quot;memory.usage.total\&quot; OR metric_name=\&quot;memory.usage.limit\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$)) by metric_name span=$span_tok$\n| chart avg(avg) as avg over _time by metric_name span=$span_tok$\n| eval \&quot;% Memory Used\&quot; = (100*&#39;memory.usage.total&#39;/&#39;memory.usage.limit&#39;)\n| table _time, \&quot;% Memory Used\&quot;&quot;,&quot;queryParameters&quot;:{&quot;earliest&quot;:&quot;$tr.earliest$&quot;,&quot;latest&quot;:&quot;$tr.latest$&quot;}},&quot;name&quot;:&quot;Copy of Memory Used %&quot;},&quot;ds_hJtUl8pl_ds_RgfeBclw_ds_NLHAGAlL_ds_uSWGsY6D&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;query&quot;:&quot;| mstats avg(_value) as total_avg, max(_value) as total_max, min(_value) as total_min, median(_value) as total_median p10(_value) as total_p10, p90(_value) as total_p90 WHERE `sim_metrics_indexes` AND (metric_name=\&quot;memory.usage.total\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$))\n| appendcols [| mstats avg(_value) as limit_avg, max(_value) as limit_max, min(_value) as limit_min, median(_value) as limit_median p10(_value) as limit_p10, p90(_value) as limit_p90 WHERE `sim_metrics_indexes` AND (metric_name=\&quot;memory.usage.limit\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$))]\n| eval \&quot;Avg % Memory Used\&quot; = (100*&#39;total_avg&#39;/&#39;limit_avg&#39;), \&quot;Max % Memory Used\&quot; = (100*&#39;total_max&#39;/&#39;limit_max&#39;), \&quot;Min % Memory Used\&quot; = (100*&#39;total_min&#39;/&#39;limit_min&#39;), \&quot;Median % Memory Used\&quot; = (100*&#39;total_median&#39;/&#39;limit_median&#39;), \&quot;P10 % Memory Used\&quot; = (100*&#39;total_p10&#39;/&#39;limit_p10&#39;), \&quot;P90 % Memory Used\&quot; = (100*&#39;total_p90&#39;/&#39;limit_p90&#39;)\n| table \&quot;Avg % Memory Used\&quot;, \&quot;Max % Memory Used\&quot;, \&quot;Min % Memory Used\&quot;, \&quot;Median % Memory Used\&quot;, \&quot;P10 % Memory Used\&quot;, \&quot;P90 % Memory Used\&quot;&quot;,&quot;queryParameters&quot;:{&quot;earliest&quot;:&quot;$tr.earliest$&quot;,&quot;latest&quot;:&quot;$tr.latest$&quot;}},&quot;name&quot;:&quot;Copy of Memory Used %&quot;},&quot;ds_disk_24h_change&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;query&quot;:&quot;| mstats sum(_value) as today WHERE `sim_metrics_indexes` AND (metric_name=\&quot;blkio.io_service_bytes_recursive.*\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$)) span=$span_tok$ earliest=-1d@h latest=@h \n| timechart avg(today) as Today span=1h \n| appendcols \n    [| mstats avg(_value) as old WHERE `sim_metrics_indexes` AND (metric_name=\&quot;blkio.io_service_bytes_recursive.*\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$)) span=$span_tok$ earliest=-2d@h latest=-1d@h \n    | timechart avg(old) as Old span=1h \n    | eval _time = relative_time(_time,\&quot;+1d\&quot;)] \n| eval \&quot;Change(%)\&quot;=round((Today/Old)-1,2), Today=round(Today,2)\n| fields - Old&quot;},&quot;name&quot;:&quot;Search_1&quot;},&quot;ds_network_24h_change&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;query&quot;:&quot;| mstats sum(_value) as today WHERE `sim_metrics_indexes` AND (metric_name=\&quot;network.usage.tx_bytes\&quot; OR metric_name=\&quot;network.usage.rx_bytes\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$)) span=$span_tok$ earliest=-1d@h latest=@h \n| timechart avg(today) as Today span=1h \n| appendcols \n    [| mstats avg(_value) as old WHERE `sim_metrics_indexes` AND (metric_name=\&quot;network.usage.tx_bytes\&quot; OR metric_name=\&quot;network.usage.rx_bytes\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$)) span=$span_tok$ earliest=-2d@h latest=-1d@h \n    | timechart avg(old) as Old span=1h \n    | eval _time = relative_time(_time,\&quot;+1d\&quot;)] \n| eval \&quot;Change(%)\&quot;=round((Today/Old)-1,2), Today=round(Today,2) \n| fields - Old&quot;},&quot;name&quot;:&quot;Copy of Search_1&quot;},&quot;ds_memory_percentile_distribution&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;query&quot;:&quot;| mstats avg(_value) as total_avg, max(_value) as total_max, min(_value) as total_min, median(_value) as total_median p10(_value) as total_p10, p90(_value) as total_p90 WHERE `sim_metrics_indexes` AND (metric_name=\&quot;memory.usage.total\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$))\n| appendcols [| mstats avg(_value) as limit_avg, max(_value) as limit_max, min(_value) as limit_min, median(_value) as limit_median p10(_value) as limit_p10, p90(_value) as limit_p90 WHERE `sim_metrics_indexes` AND (metric_name=\&quot;memory.usage.limit\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$))]\n| eval \&quot;Average\&quot; = round((100*&#39;total_avg&#39;/&#39;limit_avg&#39;),2), \&quot;Max\&quot; = round((100*&#39;total_max&#39;/&#39;limit_max&#39;),2), \&quot;Min\&quot; = round((100*&#39;total_min&#39;/&#39;limit_min&#39;),2), \&quot;Median\&quot; = round((100*&#39;total_median&#39;/&#39;limit_median&#39;),2), \&quot;P10\&quot; = round((100*&#39;total_p10&#39;/&#39;limit_p10&#39;),2), \&quot;P90\&quot; = round((100*&#39;total_p90&#39;/&#39;limit_p90&#39;),2), Metric=\&quot;Memory %\&quot;\n| fields Metric \&quot;Average\&quot;, \&quot;Max\&quot;, \&quot;Min\&quot;, \&quot;Median\&quot;, \&quot;P10\&quot;, \&quot;P90\&quot;&quot;},&quot;name&quot;:&quot;Copy of Copy of Search_1&quot;},&quot;ds_cpu_percentile_distribution&quot;:{&quot;type&quot;:&quot;ds.search&quot;,&quot;options&quot;:{&quot;queryParameters&quot;:{&quot;earliest&quot;:&quot;-24h@h&quot;,&quot;latest&quot;:&quot;now&quot;},&quot;query&quot;:&quot;| mstats avg(_value) as total_avg, max(_value) as total_max, min(_value) as total_min, median(_value) as total_median p10(_value) as total_p10, p90(_value) as total_p90 WHERE `sim_metrics_indexes` AND (metric_name=\&quot;cpu.usage.total\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$)) \n| appendcols \n    [| mstats avg(_value) as system_avg, max(_value) as system_max, min(_value) as system_min, median(_value) as system_median p10(_value) as system_p10, p90(_value) as system_p90 WHERE `sim_metrics_indexes` AND (metric_name=\&quot;cpu.usage.system\&quot;) AND sf_streamLabel=\&quot;DSIM:Docker Containers\&quot; AND (container_name IN($docker_container_tok$)) AND (extracted_host IN($docker_host_tok$))] \n| eval \&quot;Average\&quot; = round((100*&#39;total_avg&#39;/&#39;system_avg&#39;),2), \&quot;Max\&quot; = round((100*&#39;total_max&#39;/&#39;system_max&#39;),2), \&quot;Min\&quot; = round((100*&#39;total_min&#39;/&#39;system_min&#39;),2), \&quot;Median\&quot; = round((100*&#39;total_median&#39;/&#39;system_median&#39;),2), \&quot;P10\&quot; = round((100*&#39;total_p10&#39;/&#39;system_p10&#39;),2), \&quot;P90\&quot; = round((100*&#39;total_p90&#39;/&#39;system_p90&#39;),2), Metric=\&quot;CPU %\&quot; \n| fields Metric \&quot;Average\&quot;, \&quot;Max\&quot;, \&quot;Min\&quot;, \&quot;Median\&quot;, \&quot;P10\&quot;, \&quot;P90\&quot;&quot;},&quot;name&quot;:&quot;CPU Percentile Distribution&quot;}},&quot;inputs&quot;:{&quot;input_docker_containers&quot;:{&quot;type&quot;:&quot;input.custom_multiselect&quot;,&quot;title&quot;:&quot;Containers&quot;,&quot;options&quot;:{&quot;items&quot;:[{&quot;label&quot;:&quot;All&quot;,&quot;value&quot;:&quot;*&quot;}],&quot;token&quot;:&quot;docker_container_tok&quot;,&quot;defaultValue&quot;:&quot;*&quot;},&quot;encoding&quot;:{&quot;label&quot;:&quot;primary[0]&quot;,&quot;value&quot;:&quot;primary[0]&quot;},&quot;dataSources&quot;:{&quot;primary&quot;:&quot;ds_input_containers&quot;}},&quot;input_docker_hosts&quot;:{&quot;type&quot;:&quot;input.custom_multiselect&quot;,&quot;title&quot;:&quot;Hosts&quot;,&quot;options&quot;:{&quot;items&quot;:[{&quot;label&quot;:&quot;All&quot;,&quot;value&quot;:&quot;*&quot;}],&quot;token&quot;:&quot;docker_host_tok&quot;,&quot;defaultValue&quot;:&quot;*&quot;},&quot;encoding&quot;:{&quot;label&quot;:&quot;primary[0]&quot;,&quot;value&quot;:&quot;primary[0]&quot;},&quot;dataSources&quot;:{&quot;primary&quot;:&quot;ds_input_hosts&quot;}},&quot;input_time&quot;:{&quot;options&quot;:{&quot;defaultValue&quot;:&quot;-24h@h,now&quot;,&quot;token&quot;:&quot;tr&quot;},&quot;type&quot;:&quot;input.timerange&quot;,&quot;title&quot;:&quot;Time Picker&quot;},&quot;input_resolution&quot;:{&quot;options&quot;:{&quot;defaultValue&quot;:&quot;5m&quot;,&quot;token&quot;:&quot;span_tok&quot;},&quot;type&quot;:&quot;input.text&quot;,&quot;title&quot;:&quot;Resolution&quot;}},&quot;layout&quot;:{&quot;globalInputs&quot;:[&quot;input_docker_containers&quot;,&quot;input_docker_hosts&quot;,&quot;input_time&quot;,&quot;input_resolution&quot;],&quot;type&quot;:&quot;absolute&quot;,&quot;options&quot;:{&quot;width&quot;:1400,&quot;height&quot;:1700,&quot;display&quot;:&quot;auto-scale&quot;},&quot;structure&quot;:[{&quot;item&quot;:&quot;viz_Nay1HSVr&quot;,&quot;type&quot;:&quot;block&quot;,&quot;position&quot;:{&quot;x&quot;:0,&quot;y&quot;:0,&quot;w&quot;:1400,&quot;h&quot;:310}},{&quot;item&quot;:&quot;viz_docker_containers&quot;,&quot;type&quot;:&quot;block&quot;,&quot;position&quot;:{&quot;x&quot;:10,&quot;y&quot;:10,&quot;w&quot;:1380,&quot;h&quot;:290}},{&quot;item&quot;:&quot;viz_container_single_value&quot;,&quot;type&quot;:&quot;block&quot;,&quot;position&quot;:{&quot;x&quot;:10,&quot;y&quot;:320,&quot;w&quot;:330,&quot;h&quot;:260}},{&quot;item&quot;:&quot;viz_container_trend&quot;,&quot;type&quot;:&quot;block&quot;,&quot;position&quot;:{&quot;x&quot;:350,&quot;y&quot;:320,&quot;w&quot;:510,&quot;h&quot;:260}},{&quot;item&quot;:&quot;viz_containers_by_host&quot;,&quot;type&quot;:&quot;block&quot;,&quot;position&quot;:{&quot;x&quot;:870,&quot;y&quot;:320,&quot;w&quot;:517,&quot;h&quot;:260}},{&quot;item&quot;:&quot;viz_top_containers_cpu&quot;,&quot;type&quot;:&quot;block&quot;,&quot;position&quot;:{&quot;x&quot;:10,&quot;y&quot;:590,&quot;w&quot;:410,&quot;h&quot;:260}},{&quot;item&quot;:&quot;viz_total_disk_bytes&quot;,&quot;type&quot;:&quot;block&quot;,&quot;position&quot;:{&quot;x&quot;:10,&quot;y&quot;:860,&quot;w&quot;:690,&quot;h&quot;:260}},{&quot;item&quot;:&quot;viz_memory_perc_used&quot;,&quot;type&quot;:&quot;block&quot;,&quot;position&quot;:{&quot;x&quot;:10,&quot;y&quot;:1400,&quot;w&quot;:690,&quot;h&quot;:260}},{&quot;item&quot;:&quot;viz_total_network_bits&quot;,&quot;type&quot;:&quot;block&quot;,&quot;position&quot;:{&quot;x&quot;:10,&quot;y&quot;:1130,&quot;w&quot;:690,&quot;h&quot;:260}},{&quot;item&quot;:&quot;viz_cpu_perc_trend&quot;,&quot;type&quot;:&quot;block&quot;,&quot;position&quot;:{&quot;x&quot;:430,&quot;y&quot;:590,&quot;w&quot;:500,&quot;h&quot;:260}},{&quot;item&quot;:&quot;viz_disk_24h_change&quot;,&quot;type&quot;:&quot;block&quot;,&quot;position&quot;:{&quot;x&quot;:710,&quot;y&quot;:860,&quot;w&quot;:680,&quot;h&quot;:260}},{&quot;item&quot;:&quot;viz_network_24h_change&quot;,&quot;type&quot;:&quot;block&quot;,&quot;position&quot;:{&quot;x&quot;:710,&quot;y&quot;:1130,&quot;w&quot;:680,&quot;h&quot;:260}},{&quot;item&quot;:&quot;viz_memory_percentile_distribution&quot;,&quot;type&quot;:&quot;block&quot;,&quot;position&quot;:{&quot;x&quot;:710,&quot;y&quot;:1400,&quot;w&quot;:680,&quot;h&quot;:260}},{&quot;item&quot;:&quot;viz_cpu_percentile_distribution&quot;,&quot;type&quot;:&quot;block&quot;,&quot;position&quot;:{&quot;x&quot;:940,&quot;y&quot;:590,&quot;w&quot;:450,&quot;h&quot;:260}}]},&quot;description&quot;:&quot;&quot;,&quot;title&quot;:&quot;Docker Containers&quot;}</definition>
    </view>